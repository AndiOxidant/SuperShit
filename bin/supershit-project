#!/usr/bin/env node
'use strict';

var program = require('commander');

var createProject = require('../modules/createProject'),
    pkg = require('../package.json');

program
    .version(pkg.version)
    .usage('[options] <projectName>')
    .description('Creates a new SuperShit project. Uses current working directory as base dir');

program.parse(process.argv);

var projectName = program.args[0];

if (!projectName) {
    console.log('Pleas add a project name. See --help for more informations!');
    process.exit(1);
}

console.log('Create project %s', projectName);
createProject(projectName);

console.log('Project created!');


// var project = {
//     project: pkg.name,
//     browser: 'no',
//     libs: '',
//     files: '',
//     tests: '',
//     watch: ''
// };

// var questions = [
//     {
//         name: 'project',
//         type: 'prompt',
//         description: 'Enter a project name',
//         validator: function(value) {
//             if (!/^[a-zA-Z0-9_-]+$/.test(value)) {
//                 throw new Error(
//                     'Only letters, numbers _ and - are allowed in project names!' +
//                     'No special chars and whitespaces are possible!'
//                 );
//             }

//             return value;
//         },
//         default: project.project
//     },
//     {
//         name: 'browser',
//         type: 'confirm',
//         description: 'Are these test frontend tests?',
//         default: project.browser
//     },
//     {
//         name: 'libs',
//         description: 'Load any libs?',
//         default: project.libs,
//         retry: false
//     },
//     {
//         name: 'files',
//         description: 'Source files',
//         default: project.files,
//         retry: false
//     },
//     {
//         name: 'tests',
//         description: 'Tests',
//         default: project.tests,
//         retry: false
//     },
//     {
//         name: 'watch',
//         description: 'Watch files',
//         default: project.watch,
//         retry: false
//     }
// ];

// promptlySync(questions, function(err, result) {
//     console.dir(result);
//     promptlySync.confirm('Is that right?', function(err, res) {
//         if (res) {
//             fs.writeFileSync('coffeebreak.json', JSON.stringify(result, null, '    '));
//         }
//     });
// });
